apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: wait-for-zookeeper
        image: busybox:1.36
        command: ["sh", "-c", "for i in {1..180}; do echo 'Attempt $i: Checking zookeeper:2181'; nslookup zookeeper; if nc -zv zookeeper 2181; then echo 'ZooKeeper ready'; exit 0; fi; echo 'Waiting for ZooKeeper...'; sleep 5; done; echo 'Timeout waiting for ZooKeeper'; exit 1"]
        resources:
          limits:
            cpu: "100m"
            memory: "64Mi"
          requests:
            cpu: "50m"
            memory: "32Mi"
      containers:
      - name: kafka
        image: bitnami/kafka:3.7
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka:9092"
        - name: KAFKA_CFG_LISTENERS
          value: "PLAINTEXT://:9092"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        command: ["/bin/bash", "-c"]
        args: ["/opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh"]
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        volumeMounts:
        - name: kafka-data
          mountPath: /bitnami/kafka
        - name: kafka-config
          mountPath: /scripts/kafka-setup-k8s.sh
          subPath: kafka-setup-k8s.sh
      volumes:
      - name: kafka-data
        emptyDir: {}
      - name: kafka-config
        configMap:
          name: kafka-config
          defaultMode: 0755
